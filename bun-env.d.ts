// Generated by `bun init`

declare module "*.svg" {
  /**
   * A path to the SVG file
   */
  const path: `${string}.svg`;
  export = path;
}

declare module "*.module.css" {
  /**
   * A record of class names to their corresponding CSS module classes
   */
  const classes: { readonly [key: string]: string };
  export = classes;
}

declare module "*.html" {
  /**
   * Raw string contents of the HTML file. Bun converts HTML imports into
   * strings that can be served directly via Bun's `serve`.
   */
  const html: string;
  export default html;
}

export {};

/**
 * Helper utility type for Bun route handlers where `Request` objects are
 * augmented with a `params` property containing path parameters.
 *
 * Declared in the global namespace so it can be used anywhere without an
 * explicit import statement.
 */
declare global {
  type BunRequest<P extends Record<string, string> = Record<string, string>> =
    Request & { params: P };
}

// ---------------------------------------------------------------------------
// Minimal ambient declarations to satisfy TypeScript when node_modules types
// are not installed in the execution environment (e.g., online sandboxes).
// If real type packages are present, these are overridden and cause no harm.
// ---------------------------------------------------------------------------

declare module "bun" {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  export function serve(options: any): any;
}

declare const process: {
  env: Record<string, string | undefined>;
};
