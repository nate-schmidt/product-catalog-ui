name: Fix CI Failures

on:
  workflow_run:
    workflows: [Test]
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  attempt-fix:
    if: >-
      ${{ github.event.workflow_run.conclusion == 'failure' && github.event.workflow_run.name != 'Fix CI Failures' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Cursor CLI
        run: |
          curl https://cursor.com/install -fsS | bash
          echo "$HOME/.cursor/bin" >> $GITHUB_PATH

      - name: Configure git identity
        run: |
          git config user.name "Cursor Agent"
          git config user.email "cursoragent@cursor.com"

      - name: Fix CI failure
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
          MODEL: gpt-5
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cursor-agent -p "You are operating in a GitHub Actions runner.

          The GitHub CLI is available as \`gh\` and authenticated via \`GH_TOKEN\`. Git is available. You have write access to repository contents and can comment on pull requests.

          # Context:
          - Repo: ${{ github.repository }}
          - Owner: ${{ github.repository_owner }}
          - Workflow Run ID: ${{ github.event.workflow_run.id }}
          - Workflow Run URL: ${{ github.event.workflow_run.html_url }}

          # Goal:
          - Automatically fix CI failures by committing directly to the PR branch that caused the failure.

          # Requirements:
          1) Identify the PR associated with the failed workflow run and determine its head branch (the contributor/origin branch).
          2) Checkout the PR's head branch and attempt to resolve the CI failure by making minimal, targeted edits consistent with the repo's style.
          3) If a fix is possible, commit the changes directly to the PR branch and push them.
          4) Post a comment on the PR explaining what was fixed.

          # Inputs and conventions:
          - Use \`gh api\`, \`gh run view\`, \`gh pr view\`, \`gh pr diff\`, \`gh run download\`, and git commands as needed to discover the failing PR and branches.
          - Checkout the PR head branch: \`git checkout <PR_HEAD_BRANCH>\`
          - Make minimal, safe changes to fix the CI failure.
          - Commit with message: \`fix: resolve CI failure - <brief description>\`
          - Push changes: \`git push origin <PR_HEAD_BRANCH>\`
          - Comment on PR: \`gh pr comment <PR_NUMBER> --body \"ðŸ¤– Auto-fixed CI failure: <description>\"\`
          - Avoid duplicate comments; if a previous bot comment exists, update it instead of posting a new one.
          - If no actionable fix is possible, make no changes and post no comment.

          # Deliverables when updates occur:
          - Commits pushed directly to the PR's head branch.
          - A comment posted on the PR explaining the fix.
          " --force --model "$MODEL" --output-format=text
